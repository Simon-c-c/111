install.packages('tidyverse')
install.packages('DBI')
install.packages('RMySQL')
install.packages('DT')
install.packages('rjson')
install.packages('tidyjson')
install.packages('readr')
library(DBI)
library(RMySQL)
library(tidyverse)
library(DT)
library(rjson)
library(tidyjson)
library(readr)
mysqlconnection = dbConnect(MySQL(), user = 'root', password = 'z6skqQJrf', dbname = 'r-app-fat',
host = '192.168.110.5')
dbListTables(mysqlconnection)
t_class = dbSendQuery(mysqlconnection, "select * from t_class")
class = fetch(t_class, n = -1)
t_account_apply = dbSendQuery(mysqlconnection, "select * from t_account_apply")
account_apply = fetch(t_account_apply , n = -1)
t_author = dbSendQuery(mysqlconnection, "select * from t_author")
author = fetch(t_author , n = -1)
t_class_join_apply = dbSendQuery(mysqlconnection, "select * from t_class_join_apply")
class_join_apply = fetch(t_class_join_apply , n = -1)
t_class_user = dbSendQuery(mysqlconnection, "select * from t_class_user")
class_user = fetch(t_class_user , n = -1)
t_click_record = dbSendQuery(mysqlconnection, "select * from t_click_record")
click_record = fetch(t_click_record , n = -1)
t_comment = dbSendQuery(mysqlconnection, "select * from t_comment")
comment = fetch(t_comment , n = -1)
t_component = dbSendQuery(mysqlconnection, "select * from t_component")
component = fetch(t_component , n = -1)
t_course = dbSendQuery(mysqlconnection, "select * from t_course")
course = fetch(t_course , n = -1)
t_feed_back = dbSendQuery(mysqlconnection, "select * from t_feed_back")
feed_back = fetch(t_feed_back , n = -1)
t_homework = dbSendQuery(mysqlconnection, "select * from t_homework")
homework = fetch(t_homework , n = -1)
t_lab = dbSendQuery(mysqlconnection, "select * from t_lab")
lab = fetch(t_lab , n = -1)
t_login_record = dbSendQuery(mysqlconnection, "select * from t_login_record")
login_record = fetch(t_login_record , n = -1)
t_manual = dbSendQuery(mysqlconnection, "select * from t_manual")
manual = fetch(t_manual , n = -1)
t_notify = dbSendQuery(mysqlconnection, "select * from t_notify")
notify = fetch(t_notify , n = -1)
t_org = dbSendQuery(mysqlconnection, "select * from t_org")
org = fetch(t_org , n = -1)
t_post = dbSendQuery(mysqlconnection, "select * from t_post")
post = fetch(t_post , n = -1)
t_project = dbSendQuery(mysqlconnection, "select * from t_project")
project = fetch(t_project , n = -1)
t_publish_homework = dbSendQuery(mysqlconnection, "select * from t_publish_homework")
publish_homework = fetch(t_publish_homework , n = -1)
t_publish_lab = dbSendQuery(mysqlconnection, "select * from t_publish_lab")
publish_lab = fetch(t_publish_lab , n = -1)
t_scene = dbSendQuery(mysqlconnection, "select * from t_scene")
scene = fetch(t_scene , n = -1)
t_stats_use_record = dbSendQuery(mysqlconnection, "select * from t_stats_use_record")
stats_use_record = fetch(t_stats_use_record , n = -1)
t_study_homework = dbSendQuery(mysqlconnection, "select * from t_study_homework")
study_homework = fetch(t_study_homework , n = -1)
t_study_lab = dbSendQuery(mysqlconnection, "select * from t_study_lab")
study_lab = fetch(t_study_lab , n = -1)
t_tag = dbSendQuery(mysqlconnection, "select * from t_tag")
tag = fetch(t_tag , n = -1)
t_tag_res = dbSendQuery(mysqlconnection, "select * from t_tag_res")
tag_res = fetch(t_tag_res , n = -1)
t_user = dbSendQuery(mysqlconnection, "select * from t_user")
user = fetch(t_user , n = -1)
HWchecklist <- homework %>%
select('homework_id','checklist')
HWcL <- filter(HWchecklist, HWchecklist$checklist != '[]')
HWcL2 <- filter(HWcL, HWcL$checklist != '')
list1 <- fromJSON(homework$checklist[9])
result <- data.frame(fromJSON(homework$checklist[2]))[1,1:4] %>%
mutate(group = 1)
result <- result[-1,]
for( x in 1:length(homework$homework_id)) { #length(homework$homework_id)
if(nchar(homework$checklist[x]) > 5) {
list <- fromJSON(homework$checklist[x])
if(length(list) > 1) {
for ( n in 1:length(list)) {
#list1[[n]]$pLabel <- NULL
newcol <- data.frame(list[n])[,1:4] %>%
mutate(group=homework$homework_id[x])
result <- rbind(result,newcol)
}
} else {
#list[[1]]$pLabel <- NULL
newcol <- data.frame(list[1])[,1:4] %>%
mutate(group=homework$homework_id[x])
result <- rbind(result,newcol)
}
}
}
result <- result[,c(1,2,4,5)]
result1 <- unique(result)
HW1 <- homework[,c(1:19,24:35)]
rs1 <- full_join(HW1,result1,by=c('homework_id' = 'group'))
user <- user[,c(1,3,4,5,6,7,8,11,12,13,14)]
rs2 <- full_join(rs1,user,by='user_id')
names(class)[2] <- 'teacher_id'
class <- class[,c(1,2,4,7,8)]
rs3 <- full_join(rs2,class,by='class_id')
View(rs3)
path<-file.path("C:data1","ff.xls")
write.csv(rs3,'df.csv',fileEncoding="UTF-8")
write_excel_csv(rs3, 'data2.csv')
library(DBI)
library(RMySQL)
library(tidyverse)
library(DT)
library(rjson)
library(tidyjson)
library(readr)
read_csv(file = 'data2.csv')
testdf <- read_csv(file = 'data2.csv')
View(testdf)
library(DBI)
library(RMySQL)
library(tidyverse)
library(DT)
library(rjson)
library(tidyjson)
library(readr)
testdf <- read_csv(file = 'data2.csv')
View(testdf)
library(DBI)
library(RMySQL)
library(tidyverse)
library(DT)
library(rjson)
library(tidyjson)
library(readr)
mysqlconnection = dbConnect(MySQL(), user = 'root', password = 'z6skqQJrf', dbname = 'r-app-dev',
host = '192.168.110.5')
t_class = dbSendQuery(mysqlconnection, "select * from t_class")
class = fetch(t_class, n = -1)
t_account_apply = dbSendQuery(mysqlconnection, "select * from t_account_apply")
account_apply = fetch(t_account_apply , n = -1)
t_author = dbSendQuery(mysqlconnection, "select * from t_author")
author = fetch(t_author , n = -1)
t_class_join_apply = dbSendQuery(mysqlconnection, "select * from t_class_join_apply")
class_join_apply = fetch(t_class_join_apply , n = -1)
t_class_user = dbSendQuery(mysqlconnection, "select * from t_class_user")
class_user = fetch(t_class_user , n = -1)
t_click_record = dbSendQuery(mysqlconnection, "select * from t_click_record")
click_record = fetch(t_click_record , n = -1)
t_comment = dbSendQuery(mysqlconnection, "select * from t_comment")
comment = fetch(t_comment , n = -1)
t_component = dbSendQuery(mysqlconnection, "select * from t_component")
component = fetch(t_component , n = -1)
t_course = dbSendQuery(mysqlconnection, "select * from t_course")
course = fetch(t_course , n = -1)
t_feed_back = dbSendQuery(mysqlconnection, "select * from t_feed_back")
feed_back = fetch(t_feed_back , n = -1)
t_homework = dbSendQuery(mysqlconnection, "select * from t_homework")
homework = fetch(t_homework , n = -1)
t_lab = dbSendQuery(mysqlconnection, "select * from t_lab")
lab = fetch(t_lab , n = -1)
t_login_record = dbSendQuery(mysqlconnection, "select * from t_login_record")
login_record = fetch(t_login_record , n = -1)
t_manual = dbSendQuery(mysqlconnection, "select * from t_manual")
manual = fetch(t_manual , n = -1)
t_notify = dbSendQuery(mysqlconnection, "select * from t_notify")
notify = fetch(t_notify , n = -1)
t_org = dbSendQuery(mysqlconnection, "select * from t_org")
org = fetch(t_org , n = -1)
t_post = dbSendQuery(mysqlconnection, "select * from t_post")
post = fetch(t_post , n = -1)
t_project = dbSendQuery(mysqlconnection, "select * from t_project")
project = fetch(t_project , n = -1)
t_publish_homework = dbSendQuery(mysqlconnection, "select * from t_publish_homework")
publish_homework = fetch(t_publish_homework , n = -1)
t_publish_lab = dbSendQuery(mysqlconnection, "select * from t_publish_lab")
publish_lab = fetch(t_publish_lab , n = -1)
t_scene = dbSendQuery(mysqlconnection, "select * from t_scene")
scene = fetch(t_scene , n = -1)
t_stats_use_record = dbSendQuery(mysqlconnection, "select * from t_stats_use_record")
stats_use_record = fetch(t_stats_use_record , n = -1)
t_study_homework = dbSendQuery(mysqlconnection, "select * from t_study_homework")
study_homework = fetch(t_study_homework , n = -1)
t_study_lab = dbSendQuery(mysqlconnection, "select * from t_study_lab")
study_lab = fetch(t_study_lab , n = -1)
t_tag = dbSendQuery(mysqlconnection, "select * from t_tag")
tag = fetch(t_tag , n = -1)
t_tag_res = dbSendQuery(mysqlconnection, "select * from t_tag_res")
tag_res = fetch(t_tag_res , n = -1)
t_user = dbSendQuery(mysqlconnection, "select * from t_user")
user = fetch(t_user , n = -1)
HWchecklist <- homework %>%
select('homework_id','checklist')
HWcL <- filter(HWchecklist, HWchecklist$checklist != '[]')
HWcL2 <- filter(HWcL, HWcL$checklist != '')
list1 <- fromJSON(homework$checklist[9])
result <- data.frame(fromJSON(homework$checklist[2]))[1,1:4] %>%
mutate(group = 1)
result <- result[-1,]
for( x in 1:length(homework$homework_id)) { #length(homework$homework_id)
if(nchar(homework$checklist[x]) > 5) {
list <- fromJSON(homework$checklist[x])
if(length(list) > 1) {
for ( n in 1:length(list)) {
#list1[[n]]$pLabel <- NULL
newcol <- data.frame(list[n])[,1:4] %>%
mutate(group=homework$homework_id[x])
result <- rbind(result,newcol)
}
} else {
#list[[1]]$pLabel <- NULL
newcol <- data.frame(list[1])[,1:4] %>%
mutate(group=homework$homework_id[x])
result <- rbind(result,newcol)
}
}
}
result <- result[,c(1,2,4,5)]
result1 <- unique(result)
HW1 <- homework[,c(1:19,24:35)]
rs1 <- full_join(HW1,result1,by=c('homework_id' = 'group'))
user <- user[,c(1,3,4,5,6,7,8,11,12,13,14)]
rs2 <- full_join(rs1,user,by='user_id')
names(class)[2] <- 'teacher_id'
class <- class[,c(1,2,4,7,8)]
rs3 <- full_join(rs2,class,by='class_id')
write_excel_csv(rs3, 'data3.csv')
View(result)
view(homework$checklist)
name(homework)
names(homework)
view(homework$checklist_score_full)
view(homework$checklist_result)
#-------------------------------------------------------------------------
result2 <- fromJSON(homework$checklist_result[3])
View(result2)
length(result2)
length(result2[1])
length(result2[1][1])
result2[1]
result2[1][1]
result2[1][1][1]
result2[1][1][1][1]
result2[2]
result2[1][2]
result2[1][1][2]
result2[[1]]
result2[[[1]]]
result2[[1]]
result2[[1]][1]
length(result2[[1]])
length(result2[[1]][1])
length(result2[[1]][[1]])
length(result2[[1]][[1]])
result2[[1]][[1]]
result2[[1]][[2]]
#-------------------------------------------------------------------------
result2 <- fromJSON(homework$checklist_result[40])
result2[[1]]
result2[[1]][[1]]
#-------------------------------------------------------------------------
result2 <- fromJSON(homework$checklist_result[42])
result2[[1]][[1]]
#-------------------------------------------------------------------------
result2 <- fromJSON(homework$checklist_result[48])
result2[[1]][[1]]
length(result[[1]])
length(result[[1]][[1]])
#-------------------------------------------------------------------------
result2 <- fromJSON(homework$checklist_result[72])
result2[[1]][[1]]
View(homework)
#-------------------------------------------------------------------------
result2 <- homework[,c(1,23)]
names[result2]
names(result2)
result2 <- result2[!is.na(checklist_result(result2))]
result2 <- result2 %>%
filter(nchar(checklist_result) >= 5)
View(result2)
test1 <- fromJSON(result2$checklist_result[1213])
test1[[1]][[1]]
length(test1)
length(test1[1])
length(test1[[1]])
test1 <- fromJSON(result2$checklist_result[1203])
length(test1[[1]])
test1[[1]]
test1[[1]][1]
test1[[1]][[1]]
test1[[1]][[2]]
test1[[1]]
test1[[2]]
length[[1]]
length(test1[1])
length(test1[[1]])
length(test1)
test1
length(test1[1])
length(test1)
length(test1[[1]])
length(test1[[1]][1])
length(test1[[1]][[1]])
test1[[1]][[1]]
test1[[2]][[1]]
result3 <- data.frame(result2[1])[1,1:4] %>%
mutate(group = 1)
result3 <- data.frame(result2[1])
View(result3)
result3 <- data.frame(result2$checklist_result[1])
class(result2$checklist_result[1])
result3 <- data.frame(fromJSON(result2$checklist_result[1]))
result3 <- data.frame(fromJSON(result2$checklist_result[[1]][[1]]))
result3 <- data.frame(fromJSON(result2$checklist_result[1])[[1]])
result3 <- data.frame(fromJSON(result2$checklist_result[1])[[1]][[1]])
result3 <- data.frame(fromJSON(result2$checklist_result[1])[[1]][[1]]) %>%
mutate(group = 1)
result3 <- result[-1,]
result3 <- data.frame(fromJSON(result2$checklist_result[1])[[1]][[1]]) %>%
mutate(group = 1)
result3 <- result3[-1,]
for( x in 1:length(result2$homework_id)) {
test1 <- fromJSON(result2$checklist_result[x])
for(y in length(test1)){
for(z in length(test1[[y]])){
newcol <- data.frame(test1[[y]][[z]]) %>%
mutate(group=result2$homework_id[x])
result3 <- rbind(result3,newcol)
}
}
}
View(result3)
test1 <- fromJSON(result2$checklist_result[9])
View(test1)
test1[1]
test1[[1]]
test1[[1]][[1]]
test1[[1]][[1]][[1]]
test1 <- fromJSON(result2$checklist_result[8])
test1[[1]][[1]][[1]]
test1 <- fromJSON(result2$checklist_result[9])
length(test1)
length(test1[[1]])
length(test1[[1]][[1]])
